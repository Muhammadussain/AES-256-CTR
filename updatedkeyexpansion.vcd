$date
	Mon Jul 22 15:00:45 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module updatedkeyexpansion_tb $end
$var wire 128 ! out_key [127:0] $end
$var reg 1 " clk $end
$var reg 256 # key [255:0] $end
$var reg 1 $ rst $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 256 % key [255:0] $end
$var wire 1 $ rst $end
$var parameter 4 & EXPANSION_1 $end
$var parameter 4 ' EXPANSION_2 $end
$var parameter 4 ( EXPANSION_3 $end
$var parameter 4 ) EXPANSION_4 $end
$var parameter 4 * IDLE $end
$var parameter 4 + RC_CON $end
$var parameter 4 , ROT_BYTE $end
$var parameter 4 - START $end
$var parameter 4 . SUB_BYTE $end
$var parameter 4 / XOR $end
$var reg 128 0 expansion1 [127:0] $end
$var reg 128 1 expansion2 [127:0] $end
$var reg 128 2 expansion3 [127:0] $end
$var reg 1 3 expansion3_enable $end
$var reg 128 4 expansion4 [127:0] $end
$var reg 256 5 key_in [255:0] $end
$var reg 5 6 nextstate [4:0] $end
$var reg 128 7 out_key [127:0] $end
$var reg 32 8 rot [31:0] $end
$var reg 32 9 round_constant [31:0] $end
$var reg 4 : rounds_counter [3:0] $end
$var reg 2 ; second_subcounter [1:0] $end
$var reg 5 < state [4:0] $end
$var reg 32 = sub [31:0] $end
$var reg 2 > sub_counter [1:0] $end
$var reg 4 ? sub_roundcounter [3:0] $end
$var reg 32 @ temp [31:0] $end
$var reg 32 A temp2 [31:0] $end
$var reg 32 B word_8 [31:0] $end
$var reg 4 C word_counter [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 /
b1000 .
b10 -
b111 ,
b1001 +
b1 *
b110 )
b101 (
b100 '
b11 &
$end
#0
$dumpvars
bx C
b0 B
bx A
bx @
b0 ?
bx >
bx =
bx <
bx ;
b0 :
bx 9
bx 8
bx 7
b0 6
bx 5
bx 4
x3
bx 2
bx 1
bx 0
b110010000100100001000111011101010101001010111101111101101000011011000101101001111110010110011101001100100111100000010010000010000010101000011110010010110001010101000011111111001111001011010000100000111010111101101000100001010011100100110110101101000110000 %
1$
b110010000100100001000111011101010101001010111101111101101000011011000101101001111110010110011101001100100111100000010010000010000010101000011110010010110001010101000011111111001111001011010000100000111010111101101000100001010011100100110110101101000110000 #
0"
bx !
$end
#5
b10 6
b0 ;
b0 >
b0 C
b1 <
1"
#10
0"
0$
#15
b11 6
b110010000100100001000111011101010101001010111101111101101000011011000101101001111110010110011101001100100111100000010010000010000010101000011110010010110001010101000011111111001111001011010000100000111010111101101000100001010011100100110110101101000110000 5
b1 ;
b1 >
b1 C
b10 <
1"
#20
0"
#25
b100 6
b1 ?
b10101000011110010010110001010101000011111111001111001011010000100000111010111101101000100001010011100100110110101101000110000 0
b10 ;
b10 >
b10 C
b11 <
1"
#30
0"
#35
b111 6
b10 ?
b1100100001001000010001110111010 @
b1100100001001000010001110111010101010010101111011111011010000110110001011010011111100101100111010011001001111000000100100000100 1
b11 ;
b11 >
b11 C
b100 <
1"
#40
0"
#45
b1000 6
b100100001000111011101001100100 8
b0 ;
b0 >
b100 C
b111 <
1"
#50
0"
#55
b100100001000111011101000000000 @
b1000011xxxxxxxxxxxxxxxxxxxxxxxx A
b1001000010001110111010 8
b1000011 =
b1 ;
b1 >
b101 C
b1000 <
1"
#60
0"
#65
b100011101110100000000000000000 @
b1111010001000011xxxxxxxxxxxxxxxx A
b10010000100011 8
b11110100 =
b10 ;
b10 >
b110 C
1"
#70
0"
#75
b10111010000000000000000000000000 @
b1001101111010001000011xxxxxxxx A
b100100 8
b100110 =
b11 ;
b11 >
b111 C
1"
#80
0"
#85
b1001 6
b0 @
b110110001001101111010001000011 A
b0 8
b110110 =
b0 ;
b0 >
b1000 C
1"
#90
0"
#95
b101 6
b110111001001101111010001000011 9
b1 ;
b1 >
b1001 C
b1001 <
1"
#100
0"
#105
b1000 6
03
b1011110100110110100011011010011 8
b11 ?
b1011110100110110100011011010011010010111001010001100011010110011110101001101010000110100011000110101011101111011010111001110011 2
b0 ;
b0 >
b1010 C
b101 <
1"
#110
0"
#115
b1100110001101100010011011110100 A
b10111101001101101000110 8
b1100110 =
b1 ;
b1 >
b1011 C
b1000 <
1"
#120
0"
#125
b1011010011001100011011000100110 A
b101111010011011 8
b1011010 =
b10 ;
b10 >
b1100 C
1"
#130
0"
#135
b10100010110100110011000110110 A
b1011110 8
b10100 =
b11 ;
b11 >
b1101 C
1"
#140
0"
#145
b110 6
b1011000000101000101101001100110 A
b0 8
b1011000 =
b0 ;
b0 >
b1110 C
1"
#150
0"
#155
b111 6
b1101110100000010111100101010101 @
b1 :
b100 ?
b1101110100000010111100101010101000010101010010101011010111011111010001111111011101000011010110011000001001010000101001101100010 4
13
b1 ;
b1 >
b1111 C
b110 <
1"
#160
0"
#165
b1000 6
b10000001011110010101010101101110 8
b10 ;
b0 >
b0 C
b111 <
1"
#170
0"
#175
b10000001011110010101010100000000 @
b10011111010110000001010001011010 A
b100000010111100101010101 8
b10011111 =
b1 ;
b1 >
b1 C
b1000 <
1"
#180
0"
#185
b1111001010101010000000000000000 @
b11111100100111110101100000010100 A
b1000000101111001 8
b11111100 =
b10 ;
b10 >
b10 C
1"
#190
0"
#195
b1010101000000000000000000000000 @
b10110110111111001001111101011000 A
b10000001 8
b10110110 =
b11 ;
b11 >
b11 C
1"
#200
0"
#205
b0 @
b1100101101101111110010011111 A
b0 8
b1100 =
b0 ;
b0 >
b100 C
1"
#210
0"
#215
b1100011000011001011011011111100 A
b1100011 =
b1 ;
b1 >
b101 C
1"
#220
0"
#225
b1100011011000110000110010110110 A
b10 ;
b10 >
b110 C
1"
#230
0"
#235
b1100011011000110110001100001100 A
b11 ;
b11 >
b111 C
1"
#240
0"
#245
b1001 6
b1100011011000110110001101100011 A
b0 ;
b0 >
b1000 C
1"
#250
0"
#255
b101 6
b1100010011000110110001101100011 9
b1 ;
b1 >
b1001 C
b1001 <
1"
#260
0"
#265
b1000 6
03
b1011110111101101000111110011 8
b101 ?
b1011110111101101000111110011000111101101000111110100011110011011111100101111100011010001000111111110111110000011100101010011 2
b0 ;
b0 >
b1010 C
b101 <
1"
#270
0"
#275
b1101011000110110001101100011 A
b10111101111011010001 8
b1101 =
b1 ;
b1 >
b1011 C
b1000 <
1"
#280
0"
